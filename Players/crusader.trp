{
Program: Crusader

Author: Denahiro

Description: Has a strict set of rules and follows them blindly.
}

{
UBuffer usage:
}

procedure Assignment(var ToTerritory: integer);
var
  T: integer;
begin
  // find random free territory (a very stupid way to start the game!)
  ToTerritory:=0;
  repeat
    T:=round(URandom(42))+1;
    if TOwner(T)=0 then begin
      ToTerritory:=T;
    end;
  until (ToTerritory>0);
end;

procedure Placement(var ToTerritory: integer);
var
  T,Armies,MinArmies: integer;
begin
  // balance all fronts
  for T:=1 to 42 do begin
    if TIsFront(T) then begin
      Armies:=TArmies(T);
      if (ToTerritory=0) or (Armies<MinArmies) then begin
        MinArmies:=Armies;
        ToTerritory:=T;
      end
    end;
  end;
end;

procedure Attack(var FromTerritory, ToTerritory: integer);
var
  T,EnemyT,EnemyA: integer;
begin
  // attack weakest point until exhausted
  FromTerritory:=0;
  ToTerritory:=0;
  for T:=1 to 42 do begin
    if TIsFront(T)                      // territory is mine and front
    and (TArmies(T)>1) then begin       // attack is possible
      TWeakestFront(T,EnemyT,EnemyA);
      if EnemyT>0 then begin
        FromTerritory:=T;
        ToTerritory:=EnemyT;
      end;
    end;
  end;
end;

procedure Occupation(FromTerritory, ToTerritory: integer; var Armies: integer);
var
  ET,EA:integer;
  ArmiesFrom,ArmiesTo,ArmiesTotal:integer;
  ArmiesDesiredFrom:integer;
begin
  if TIsFront(FromTerritory) then begin
    if TIsFront(ToTerritory) then begin
      ArmiesTotal:=TArmies(FromTerritory)+TArmies(ToTerritory);
      TStrongestFront(FromTerritory,ET,EA);
      ArmiesFrom:=EA;
      TStrongestFront(ToTerritory,ET,EA);
      ArmiesTo:=EA;
      if ArmiesTotal<ArmiesFrom+ArmiesTo then begin // too few armies available
        ArmiesDesiredFrom:=round(double(ArmiesTotal)*double(ArmiesFrom)
            /double(ArmiesFrom+ArmiesTo));
      end else begin
        ArmiesDesiredFrom:=ArmiesFrom;
      end;
      Armies:=TArmies(FromTerritory)-ArmiesDesiredFrom;
      if Armies<0 then begin
        Armies:=0;
      end;
      if Armies>TArmies(FromTerritory)-1 then begin
        Armies:=TArmies(FromTerritory)-1;
      end;
    end else begin //To is not front
      Armies:=0;
    end;
  end else begin //From is not front
    //Move all
    Armies:=TArmies(FromTerritory)-1;
  end;
end;

procedure Fortification(var FromTerritory, ToTerritory, Armies: integer);
var
  T,B,TActual: integer;
  ET,EA: integer;
  Need,MaxNeed: integer;
  MaxArmies: integer;
begin
  // first check if we can directly fortify a front territory then search the largest
  // army and move it to the front
  FromTerritory:=0;
  ToTerritory:=0;
  Armies:=0;
  MaxNeed:=0;
  for T:=1 to 42 do begin
    if TIsMine(T) and (TArmies(T)>1) and (not TIsFront(T)) then begin
      for B:=1 to TBordersCount(T) do begin
        TActual:=TBorder(T,B);
        if TIsFront(TActual) then begin
          TStrongestFront(TActual,ET,EA);
          Need:=EA-TArmies(T)-TArmies(TActual);
          if (Need>MaxNeed)  or (ToTerritory=0) then begin
            MaxNeed:=Need;
            FromTerritory:=T;
            ToTerritory:=TActual;
          end;
        end;
      end
    end;
  end;

  if ToTerritory>0 then begin
    Armies:=TArmies(FromTerritory)-1;
  end else begin
    MaxArmies:=1;
    for T:=1 to 42 do begin
      if TIsMine(T) and (not TIsFront(T)) then begin
        if TArmies(T)>MaxArmies then begin
          MaxArmies:=TArmies(T);
          FromTerritory:=T;
        end;
      end;
    end;
    if FromTerritory>0 then begin
      ToTerritory:=TPathToFront(FromTerritory);
      Armies:=TArmies(FromTerritory)-1;
    end;
  end;
end;

begin
end.